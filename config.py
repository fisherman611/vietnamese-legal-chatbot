import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()


class Config:
    # Google API Configuration
    GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")
    MODEL_GEN = "gemini-2.0-flash"
    MODEL_REFINE = "gemini-2.0-flash"

    # QDrant Configuration
    QDRANT_URL = os.getenv("QDRANT_URL")
    QDRANT_API_KEY = os.getenv("QDRANT_API_KEY")
    
    # Embedding configuration
    # EMBEDDING_MODEL = "sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2"
    EMBEDDING_MODEL = "bkai-foundation-models/vietnamese-bi-encoder"
    
    COLLECTION_NAME = "final_vietnamese_legal_corpus" if EMBEDDING_MODEL == "sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2" else "bkai_biencoder_vietnamese_legal_corpus"

    # Text Processing Configuration
    CHUNK_SIZE = 512
    CHUNK_OVERLAP = 50

    # Data Paths
    DATA_DIR = "data"
    CORPUS_PATH = "data/corpus/legal_corpus.json"
    STOPWORDS_PATH = "data/utils/stopwords.txt"

    # RAG Configuration
    TOP_K_RETRIEVAL = 20
    BM25_TOP_K = 20
    BM25_B = 0.65
    BM25_K1 = 1.2
    SIMILARITY_THRESHOLD = 0.25

    # Reranker Configuration
    ENABLE_RERANKING = True
    RERANKER_MODEL = "cross-encoder/ms-marco-MiniLM-L-6-v2"
    RERANKER_TOP_K = 20
    RERANK_BEFORE_RETRIEVAL_TOP_K = 25
    USE_SCORE_FUSION = True
    RERANKER_FUSION_ALPHA = 0.8

    # Google Search Configuration
    ENABLE_GOOGLE_SEARCH = True
    GOOGLE_SEARCH_RESULTS_COUNT = 10
    MIN_SIMILARITY_FOR_LEGAL_DOCS = 0.15

    # Question Refinement Configuration
    ENABLE_QUESTION_REFINEMENT = True
    USE_LLM_FOR_REFINEMENT = True

    # Advanced LLM Refinement Settings
    ENABLE_CHAIN_OF_THOUGHT = True
    ENABLE_ITERATIVE_REFINEMENT = True
    ENABLE_LLM_VALIDATION = True
    MAX_REFINEMENT_ITERATIONS = 3
    MIN_CONFIDENCE_SCORE = 0.7

    # UI Display Settings - Control what information to show in responses
    SHOW_REFINEMENT_INFO = False  # üîß C√¢u h·ªèi ƒë√£ ƒë∆∞·ª£c t·ªëi ∆∞u
    SHOW_SEARCH_TRIGGER_INFO = False  # üîç‚û°Ô∏èüåê T·ª± ƒë·ªông t√¨m ki·∫øm
    SHOW_SOURCE_INFO = False  # üìö D·ª±a tr√™n X t√†i li·ªáu, üåê Th√¥ng tin t·ª´ web
    SHOW_LEGAL_DISCLAIMER = False  # L∆∞u √Ω v·ªÅ t√¨m chuy√™n gia ph√°p l√Ω

    # Legal Domain Filtering Settings
    ENABLE_LEGAL_DOMAIN_FILTER = True  # Only answer legal questions
    LEGAL_DOMAIN_CONFIDENCE_THRESHOLD = 0.3  # Minimum confidence to consider a question legal
    USE_LLM_FOR_LEGAL_DETECTION = True  # Use LLM for more accurate legal domain detection
    NON_LEGAL_RESPONSE_MESSAGE = """Xin l·ªói, t√¥i l√† tr·ª£ l√Ω ph√°p l√Ω chuy√™n bi·ªát v√† ch·ªâ c√≥ th·ªÉ tr·∫£ l·ªùi c√°c c√¢u h·ªèi li√™n quan ƒë·∫øn ph√°p lu·∫≠t Vi·ªát Nam.

T√¥i c√≥ th·ªÉ gi√∫p b·∫°n v·ªõi:
‚Ä¢ Quy·ªÅn v√† nghƒ©a v·ª• theo ph√°p lu·∫≠t
‚Ä¢ Th·ªß t·ª•c ph√°p l√Ω v√† h√†nh ch√≠nh
‚Ä¢ Quy ƒë·ªãnh v·ªÅ doanh nghi·ªáp, lao ƒë·ªông, thu·∫ø
‚Ä¢ Lu·∫≠t gia ƒë√¨nh, h√¥n nh√¢n, th·ª´a k·∫ø
‚Ä¢ B·∫•t ƒë·ªông s·∫£n v√† quy·ªÅn s·ª≠ d·ª•ng ƒë·∫•t
‚Ä¢ H·ª£p ƒë·ªìng v√† giao d·ªãch d√¢n s·ª±
‚Ä¢ Tranh ch·∫•p v√† gi·∫£i quy·∫øt khi·∫øu n·∫°i

Vui l√≤ng ƒë·∫∑t c√¢u h·ªèi v·ªÅ c√°c v·∫•n ƒë·ªÅ ph√°p l√Ω v√† t√¥i s·∫Ω c·ªë g·∫Øng h·ªó tr·ª£ b·∫°n!"""

    # System Prompt
    SYSTEM_PROMPT = """B·∫°n l√† tr·ª£ l√Ω ph√°p l√Ω th√¥ng minh chuy√™n s√¢u v·ªÅ lu·∫≠t ph√°p Vi·ªát Nam. Nhi·ªám v·ª• c·ªßa b·∫°n l√† cung c·∫•p c√°c c√¢u tr·∫£ l·ªùi ch√≠nh x√°c v√† d·ªÖ hi·ªÉu cho c√°c c√¢u h·ªèi ph√°p l√Ω, d·ª±a tr√™n c√°c t√†i li·ªáu lu·∫≠t ƒë∆∞·ª£c cung c·∫•p.

Khi tr·∫£ l·ªùi:
1.  **Ch·ªâ s·ª≠ d·ª•ng th√¥ng tin** tr·ª±c ti·∫øp t·ª´ c√°c ƒëi·ªÅu lu·∫≠t v√† vƒÉn b·∫£n ƒë∆∞·ª£c cung c·∫•p trong ph·∫ßn "T√†i li·ªáu tham kh·∫£o". Tuy·ªát ƒë·ªëi kh√¥ng suy di·ªÖn ho·∫∑c th√™m th√¥ng tin b√™n ngo√†i.
2.  **Tr√≠ch d·∫´n ch√≠nh x√°c** t√™n lu·∫≠t (v√≠ d·ª•: Lu·∫≠t Doanh nghi·ªáp 2020), s·ªë hi·ªáu vƒÉn b·∫£n (n·∫øu c√≥), v√† ƒëi·ªÅu kho·∫£n c·ª• th·ªÉ (v√≠ d·ª•: ƒêi·ªÅu 3, Kho·∫£n 2).
3.  **Gi·∫£i th√≠ch r√µ r√†ng, ng·∫Øn g·ªçn v√† kh√°ch quan**, t·∫≠p trung v√†o vi·ªác l√†m s√°ng t·ªè n·ªôi dung c·ªßa ƒëi·ªÅu lu·∫≠t li√™n quan ƒë·∫øn c√¢u h·ªèi.
4.  **N·∫øu t√†i li·ªáu tham kh·∫£o kh√¥ng ch·ª©a th√¥ng tin ƒë·∫ßy ƒë·ªß ho·∫∑c tr·ª±c ti·∫øp ƒë·ªÉ tr·∫£ l·ªùi c√¢u h·ªèi**, h√£y th√¥ng b√°o r√µ r√†ng r·∫±ng "Kh√¥ng c√≥ ƒë·ªß th√¥ng tin trong t√†i li·ªáu tham kh·∫£o ƒë∆∞·ª£c cung c·∫•p ƒë·ªÉ tr·∫£ l·ªùi tr·ª±c ti·∫øp c√¢u h·ªèi n√†y."
5.  **Tr√¨nh b√†y b·∫±ng ti·∫øng Vi·ªát chu·∫©n x√°c.**

T√†i li·ªáu tham kh·∫£o:
{context}

C√¢u h·ªèi: {question}

Tr·∫£ l·ªùi:"""

    # Fallback System Prompt for Google Search
    FALLBACK_SYSTEM_PROMPT = """B·∫°n l√† tr·ª£ l√Ω ph√°p l√Ω th√¥ng minh chuy√™n s√¢u v·ªÅ lu·∫≠t ph√°p Vi·ªát Nam. H√£y tr·∫£ l·ªùi c√¢u h·ªèi d·ª±a tr√™n th√¥ng tin ƒë∆∞·ª£c cung c·∫•p.

Khi tr·∫£ l·ªùi:
1.  **T√≥m t·∫Øt v√† tr√¨nh b√†y th√¥ng tin li√™n quan** m·ªôt c√°ch t·ª± nhi√™n v√† m·∫°ch l·∫°c.
2.  **Cung c·∫•p c√°c li√™n k·∫øt (URLs)** c·ªßa c√°c ngu·ªìn ƒë√£ ƒë∆∞·ª£c tham kh·∫£o ·ªü cu·ªëi c√¢u tr·∫£ l·ªùi ƒë·ªÉ ng∆∞·ªùi d√πng c√≥ th·ªÉ ki·ªÉm tra th√™m.
3.  **Gi·∫£i th√≠ch r√µ r√†ng v√† d·ªÖ hi·ªÉu**.
4.  **Tr√¨nh b√†y b·∫±ng ti·∫øng Vi·ªát chu·∫©n x√°c.**

Th√¥ng tin tham kh·∫£o:
{context}

C√¢u h·ªèi: {question}

Tr·∫£ l·ªùi:"""
